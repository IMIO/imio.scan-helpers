name: Windows release
on: [push, pull_request]

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2.1
      id: get_tag
    - uses: nelonoel/branch-name@v1.0.1
    - name: Compute release
      id: release
      env:
        TAG: ${{ steps.get_tag.outputs.tag }}
      run: |
        if ($env:TAG -eq '') {
            $Env:RELEASE = "$ENV:BRANCH_NAME-${{ github.run_number }}"
            $Env:RELEASE = $Env:RELEASE -replace "/", "_"
            echo "::set-output name=release::$Env:RELEASE"
            echo "::set-output name=create_tag::false"
        }
        else {
            echo "::set-output name=release::$Env:TAG"
            echo "::set-output name=create_tag::true"
        }
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        pip install pyinstaller==6.9.0
#        pip install pytest
    - name: Build exe
      run: |
        pyinstaller.exe imio-scan-helpers.spec
#    - name: Create Release
#      id: create_release
#      if: steps.release.outputs.create_tag == 'false'
#      uses: ncipollo/release-action@v1.14.0
#      with:
#        tag: ${{ steps.release.outputs.release }}
#        name: Prerelease ${{ steps.release.outputs.release }}
#        commit: ${{ github.base_href }}
#        draft: false
#        prerelease: true
#        token: ${{ secrets.GITHUB_TOKEN }}
#    - name: Create Tag
#      id: create_tag
#      if: steps.release.outputs.create_tag == 'true'
#      uses: ncipollo/release-action@v1.12.0
#      with:
#        tag: ${{ steps.release.outputs.release }}
#        draft: false
#        prerelease: false
#        token: ${{ secrets.GITHUB_TOKEN }}
#    - name: Upload Release Asset
#      id: upload-release-asset
#      if: steps.release.outputs.create_tag == 'false'
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: imio\scan-helpers\dist\main-win64-${{ steps.release.outputs.release }}.exe
#        asset_name: main-win64-${{ steps.release.outputs.release }}.exe
#        asset_content_type: application/exe
#    - name: Upload Release Asset
#      id: upload-tag-asset
#      if: steps.release.outputs.create_tag == 'true'
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_tag.outputs.upload_url }}
#        asset_path: imio\scan-helpers\dist\main-win64-${{ steps.release.outputs.release }}.exe
#        asset_name: main-win64-${{ steps.release.outputs.release }}.exe
#        asset_content_type: application/exe
